version: '3'

services:
#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    ports:
#      - '8080:8080'

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: 'login'
      POSTGRES_PASSWORD: 'pass'
      POSTGRES_DB: 'db-name'
    ports:
      - '5432:5432'

  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - '6379:6379'

  redis-ui:
    container_name: redis-ui
    image: rediscommander/redis-commander
    ports:
      - '8081:8081'
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis

  kafka:
    image: bitnami/kafka:3.9
    ports:
      - '9092:9092'
      - '9094:9094'
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: 'controller,broker'
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: '0@kafka:9093'
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CFG_LISTENERS: 'PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094'
      KAFKA_CFG_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094'
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'

  kafka-init:
    image: bitnami/kafka:3.9
    command: |
      kafka-topics.sh --create --bootstrap-server kafka:9092 --topic apple-topic
    depends_on:
      - kafka

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - '8383:8383'
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - SERVER_PORT=8383
    depends_on:
      - kafka
    links:
      - kafka

  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./grafana/tempo.yaml:/etc/tempo.yaml
    ports:
      - '3200:3200'  # tempo
      - '4317:4317'  # otlp grpc

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./grafana/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - '9090:9090'

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor traceQLStreaming metricsSummary
    ports:
      - '3000:3000'